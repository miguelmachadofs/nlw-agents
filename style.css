/* 
    CSS - Cascading StyleSheet 

    Conceito de cascata:
    - As tags que estão ao final da cascata têm prioridade sobre as que estão no início.
    - As regras mais específicas têm prioridade sobre as menos específicas.
    - Somente é substituída essa regra se a nova regra for mais específica.

    Conceito de Especificidade:
    - A especificidade é uma medida de quão específica é uma regra CSS.
    - Regras mais específicas substituem regras menos específicas.
    - A especificidade é calculada com base em seletores, IDs, classes e elementos.
    - A ordem de prioridade é: inline styles > IDs > classes > elementos.
*/

:root {
    --cor-erro-resposta: #ff5555;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body *, :root {
    font-family: 'Inter', sans-serif;
    line-height: 160%;
}

body {
    /*
        A propriedade 'background' abaixo é uma forma contraída (shorthand) que combina:
        - background-color: #121214
        - background-image: url("./assets/bg.jpg")
        - background-repeat: no-repeat
        - background-position: top center
        - background-size: cover (o valor após a /)
    */
    background: #121214 url("./assets/bg.jpg") no-repeat top center / cover;
    min-height: 100vh;
    color: white;
}

header {
    padding-top: 2rem;
    text-align: center;
}

header img {
    width: 15rem;
}

main {
    max-width: 36rem;
    width: 90%;
    margin: 3rem auto;
}

section {
    background-image: linear-gradient(90deg, #9572fc 0%, #43e7ad 50%, #e2d45c 100%);
    border-radius: 0.625rem;
    padding-top: 4px;
}

section > div {
    padding: 2rem;
    padding-top: 1.5rem;
    border-radius: 0.5rem;
    background-color: #2a2634;
}

section h2 {
    letter-spacing: -0.47px;
}

section p {
    letter-spacing: -0.18px;
    color: #a1a1aa;
}

/* Animações */
main section {
    opacity: 0;
    transform: translateY(2rem);

    animation-name: appear;
    animation-duration: 700ms;
    animation-fill-mode: forwards; /* Mantém o estado final da animação */
}

/* At-Rules (Regras de @) */
@keyframes appear {
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

form {
    display: flex;
    gap: 0.85rem;
    flex-wrap: wrap;
    margin: 1.25rem 0;
}

input, select {
    all: unset; /* Remove todos os estilos padrão */
    border: 2px solid #9147ff;
    border-radius: 0.5rem;
    padding: 0.675rem;
    font-size: 0.875rem;
    background-color: #00000066; /* Cor de fundo com opacidade de 66 (vai de 00 até ff). Determina a transparência da cor informada */
}

input {
    flex: 1;
}

button {
    width: 100%;
    padding: 0.675rem;
    border: 0;
    border-radius: 0.5rem;
    background-image: linear-gradient(245deg, #9572fc 0%, #43e7ad 50%, #e2d45c 100%);
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 0.12px;

    transition: all 0.3s;
}

button:hover {
    cursor: pointer;
    transform: translateY(-2px);
    box-shadow: 0 5px 1rem rgba(255, 248, 107, 0.2);
}

button:disabled {
    transition: initial;
    transform: initial;
    box-shadow: initial;
    cursor: not-allowed;
    color: black;
}

#aiResponse {
    background-color: rgba(0, 0, 0, 0.4);
    border-radius: 0.5rem;
    padding: 1.25rem;
    border-left: 4px solid #43e7ad;
}

#aiResponse ul {
    padding-left: 1.5rem;
    opacity: 0.8;
}

#aiResponse p {
    color: white;
}

#aiResponse.error {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    background-color: rgba(255, 85, 85, 0.1);
    border-left-color: var(--cor-erro-resposta);
}

.loading {
    animation: pulse 1s infinite;
}

@keyframes pulse {
    50% {
        opacity: 0.5;
    }
}

.hidden {
    display: none;
}

.icon-error {
    width: 24px;
    height: 24px;
    fill: var(--cor-erro-resposta);
}